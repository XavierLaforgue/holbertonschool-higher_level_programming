>>> print_square = __import__('4-print_square').print_square

# print_square with no input
>>> print_square()
Traceback (most recent call last):
...
TypeError: print_square() missing 1 required positional argument: 'size'

# size is None
>>> print_square(None)
Traceback (most recent call last):
...
TypeError: size must be an integer

# size is int
>>> print_square(4)
####
####
####
####

# size is negative int
>>> print_square(-4)
Traceback (most recent call last):
...
ValueError: size must be >= 0

# size is float
>>> print_square(4.7)
Traceback (most recent call last):
...
TypeError: size must be an integer

# size is negative float
>>> print_square(-4.7)
Traceback (most recent call last):
...
TypeError: size must be an integer

# size is string
>>> print_square('4')
Traceback (most recent call last):
...
TypeError: size must be an integer

# print_square has two inputs
>>> print_square(2, 3)
Traceback (most recent call last):
...
TypeError: print_square() takes 1 positional argument but 2 were given

# size is a list of ints
>>> print_square([3, 5])
Traceback (most recent call last):
...
TypeError: size must be an integer

# size is 'inf'
>>> print_square(float('Inf'))
Traceback (most recent call last):
...
TypeError: size must be an integer

# size is 1e999
>>> print_square(1e999)
Traceback (most recent call last):
...
TypeError: size must be an integer

# size is 10**999
>>> print_square(10**999)
Traceback (most recent call last):
...
OverflowError: cannot fit 'int' into an index-sized integer

# size is NaN
>>> print_square(float('NaN'))
Traceback (most recent call last):
...
TypeError: size must be an integer
